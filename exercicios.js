/*
// 1. Declare tr√™s vari√°veis diferentes (uma para cada tipo: string, n√∫mero e booleano) e atribua valores a elas. Em seguida, exiba o tipo de cada vari√°vel no console.
const variavelString = 'Variavel do tipo string'
const variavelNumero = 53;
const variavelBoolean1 = true;
const variavelBoolean2 = false;

console.log(`Armazenando ${variavelString} e do tipo num√©rico: ${variavelNumero}`)

if (variavelNumero < 50) {
    console.log(variavelBoolean1); // -> Se for menor que o valor armazenado na variavelNumero, vai ser exibido true (verdadeiro)
} else {
    console.log(variavelBoolean2); // -> Se n√£o for menor o valor armazenado na variavelNumero, vai ser exibido false (falso)
}

// 2. Crie duas vari√°veis, uma contendo seu primeiro nome e outra contendo seu √∫ltimo nome. Em seguida, combine-as em uma terceira vari√°vel usando o operador + e em uma quarta vari√°vel usando
//  template strings. Por fim, imprima os resultados obtidos no console.

const nome = 'Jo√£o Vitor';
const sobrenome = 'Laurindo';

const nomeCompleto = nome + ' ' + sobrenome;
const nomeCompletoTemplateString = `${nome} ${sobrenome}`;

console.log(nomeCompleto, `Resultado com templateString: ${nomeCompletoTemplateString}`);

// 3. Declare duas vari√°veis, uma contendo um n√∫mero e outra contendo uma string. Em seguida, combine-as em uma terceira vari√°vel usando template strings para montar uma frase e
//  exiba o resultado no console.

const nomeUser = 'Jo√£o Vitor Laurindo';
const idade = '25'
const infoUser = `${nome}, tenho ${idade}`;

console.log(`Praticando JavaScript: sou o ${infoUser} anos`);


// 4. Crie uma vari√°vel inicializada com um valor de qualquer tipo e, em seguida, reatribua um novo valor a essa vari√°vel. Imprima ambos os valores no console ap√≥s atribu√≠-los.

let numero;
numero = 85
console.log('Vari√°vel n√∫mero valor inicial: ' + numero);

numero = 45
console.log('Vari√°vel n√∫mero valor reatribuido: ' + numero);


// 5. Declare uma vari√°vel usando var fora de um bloco de c√≥digo (por exemplo, if) e outra dentro desse bloco. Tente acessar essas vari√°veis dentro do bloco e fora dele utilizando console.log
//  e analise os resultados. Fa√ßa o mesmo processo utilizando let e compare com os resultados anteriores.
var primeiroNumero = 88;

if (true){
   var segundoNumero = 90 ;
    console.log(`Exibindo o primeiro n√∫mero: ${primeiroNumero} e o segundo n√∫mero: ${segundoNumero} no console.log`);
}

let terceiroNumero = 50;

if(true){
    let quartoNumero = 25;
}

console.log(`Exibindo o terceiro n√∫mero: ${terceiroNumero} e o quarto n√∫mero: ${quartoNumero} no console.log`);



// 6. Declare uma vari√°vel booleana que informa se est√° chovendo e utilize-a em uma estrutura condicional (if) para exibir uma mensagem informando se √© preciso levar um guarda-chuva ou n√£o 
// dependendo do valor da vari√°vel.

const clima01 = false

if (clima01){
    console.log('Prepare o guarda-chuva pois hoje tem fortes √≠ndices de chuva')
} else {
    console.log('Saia com uma vestimenta mais fresca pois hoje tem previs√£o de sol')
}

*/

const estudante = "Carlos";

const notas = [8, 10, 9.5, 7]

const somaDasNotas = notas.reduce((soma, nota) => soma + nota, 0)

/*const notaPrimeiroBi = 5
const notaSegundoBi = 5
const notaTerceiroBi = 5
const notaQuartoBi = 5
*/

/*
const mediaFinal = somaDasNotas / 4

if (mediaFinal > 5){
    console.log(`Nota: ${mediaFinal.toFixed(2)} Parab√©ns ${estudante}, voc√™ foi aprovado para o pr√≥ximo ano letivo üòÄ Desejamos a voc√™ boas festas!`)
} else {
    console.log(`Nota: ${mediaFinal.toFixed(2)} Quase l√° ${estudante}, infelizmente voc√™ n√£o foi aprovado para a pr√≥xima etapa ‚òπ  mais sorte na pr√≥xima, desejamos boas festas!`)
}

*/

// 1. Crie uma vari√°vel contendo uma frase. Em seguida, exiba no console o comprimento da frase e a mesma frase com letras mai√∫sculas.

const mensagem = 'Bem vindo as pr√°ticas de JavaScript'

//console.log(mensagem, mensagem.length + " caracteres")
//console.log(mensagem.toUpperCase())

// 2. Declare duas vari√°veis, uma inicializada com valor null e outra que n√£o recebe atribui√ß√£o (resultando em undefined). Exiba os valores no console.
let exemplo = null;
let segundoExemplo;

//console.log(exemplo)
//console.log(segundoExemplo)


// 3. Crie 3 vari√°veis de tipos diferentes, utilize template strings para combinar os diferentes tipos de dados (number, string, boolean) em uma √∫nica string e exiba o resultado no console.

const identificador = 'Jo√£o Vitor'
const idade = 25
const verificacao = true

//console.log(`${identificador} tem ${idade} anos de idade, essa informa√ß√£o √© ${verificacao}`)

// 4. Crie uma vari√°vel num√©rica e uma string. Fa√ßa a convers√£o da vari√°vel num√©rica para string e da string para n√∫mero. Exiba os tipos de dados resultantes no console.

const primeiroValor = 25;
const convertendoParaString = primeiroValor.toString();

const segundoValor = '45';
const convertendoParaNumber = parseInt(segundoValor);

//console.log(convertendoParaString);
//console.log(convertendoParaNumber);

// 5. Crie uma vari√°vel com uma string e utilize m√©todos de manipula√ß√£o de strings, como toUpperCase, toLowerCase, slice ou outros, para modificar a string original. Exiba
//  os resultados finais no console.

const modificandoMensagem = "mudando a caixa da mensagem";

//console.log(modificandoMensagem.toUpperCase())
//console.log(modificandoMensagem.toLowerCase())
//console.log(modificandoMensagem.slice(0,15))

// 6. Crie vari√°veis que armazenem o valor do saldo, de dep√≥sito e de um saque de uma conta banc√°ria, depois realize opera√ß√µes de adi√ß√£o e subtra√ß√£o entre eles utilizando uma vari√°vel 
// chamada operacao, considerando a fun√ß√£o de cada vari√°vel criada anteriormente. Exiba os resultados finais no console.
let saldoAtual = 1000;
let deposito = 500;
let saque = 100;

let operacao = saldoAtual + deposito - saque

//console.log(operacao)

// 2. Crie uma vari√°vel num√©rica com um valor. Utilize um operador tern√°rio para verificar se esse valor √© par ou √≠mpar. Exiba o resultado no console.

const numeroIdenticado = 25;

let verificacaoNumerica = numeroIdenticado % 2 === 0 ? "O n√∫mero escolhido √© par" :  "O n√∫mero escolhido √© impar";

//console.log(verificacaoNumerica);

// 3. Considere uma situa√ß√£o em que voc√™ est√° verificando se um usu√°rio est√° logado e tem permiss√£o de administrador para acessar determinada funcionalidade.
//  Utilize vari√°veis booleanas para simular essas condi√ß√µes e use o operador AND para verificar se ambas s√£o verdadeiras.

const userLog = true;
const userAdm = true;

if(userLog && userAdm){
    //console.log("Acesso permitido ao sistema.")
} else {
    //console.log("Acesso negado. √â necess√°rio estar logado como administrador.")
}

// 4. Declare duas vari√°veis booleanas e use o operador OR para verificar se pelo menos uma delas √© verdadeira. Exiba o resultado no console.

const hojeSabado = false;
const fezSol = false;

if (hojeSabado || fezSol){
    //console.log("Verdadeiro")
} else {
    //console.log("Falso");
}

// 5. Imagine um sistema que determina se um usu√°rio tem idade suficiente para comprar o ingresso para um show. Declare duas vari√°veis que determinem a idade m√≠nima
//  e qual a idade do usu√°rio e utilize estruturas condicionais (if, else) para determinar se o usu√°rio pode realizar a compra.

const idadeUser = 17;
const idadeMinima = 18;

if(idadeUser >= idadeMinima){
    console.log("Compra permitida.")
} else {
    //console.log("Acesso negado. O usu√°rio n√£o tem a idade minima para comprar o ingresso.")
}

// 1. Crie uma fun√ß√£o que receba o nome de uma pessoa como argumento e retorne uma sauda√ß√£o personalizada. 
// Em seguida, chame a fun√ß√£o e exiba a sauda√ß√£o no console.
/*
function saudacao (nome){
    return `Ol√° ${nome} seja bem vindo!`
}

console.log(saudacao('Igor'))


// 2. Crie uma fun√ß√£o que receba a idade de uma pessoa e retorne se ela √© maior de idade (idade >= 18). Imprima o resultado no console.

function verificacaoIdade (nome, idade){
    if (idade >= 18){
        return `Ol√° ${nome}, voc√™ tem ${idade} de idade e √© maior de idade.`
    } else {
        return `Desculpe ${nome}, voc√™ tem apenas ${idade} de idade e n√£o tem autoriza√ß√£o para prosseguir.`
    }
}

console.log(verificacaoIdade('Igor', 18));


// 3. Crie uma fun√ß√£o que receba uma string e verifique se √© um pal√≠ndromo (uma palavra que √© lida da mesma forma de tr√°s para frente) 
// utilizando o m√©todo de string reverse(). Retorne true se for um pal√≠ndromo e false caso contr√°rio. Imprima o resultado no console.

function verificacaoPalindromo(palavra){
    const palavraInversa =  palavra.split('').reverse().join('');
    return palavra.toLowerCase() === palavraInversa.toLowerCase();
}

console.log(verificacaoPalindromo('arara'));
console.log(verificacaoPalindromo('Rato'));



// 4.Crie uma fun√ß√£o que receba tr√™s n√∫meros como par√¢metros e determine qual √© o maior entre eles. Utilize estruturas condicionais (if, else)
//  para comparar os valores e determinar o maior. Imprima o maior valor no console.

function comparacaoNumerica(primeiroNumero, segundoNumero, terceiroNumero){
    let maiorNumero = primeiroNumero;

    if(segundoNumero > maiorNumero){
        maiorNumero = segundoNumero;
    } if(terceiroNumero > maiorNumero){
        maiorNumero = terceiroNumero;
    }

    return `O maior n√∫mero √©: ${maiorNumero}`;
}

console.log(comparacaoNumerica(55, 25, 44));

*/

// 5. Crie uma arrow function chamada calculaPotencia que receba dois par√¢metros: a base e o expoente. A fun√ß√£o deve calcular a pot√™ncia da base elevada ao expoente e retornar o resultado.

const calculaPotencia = (base, expoente) => {
    return Math.pow(base, expoente);
};

const base = 2;
const expoente = 3;

const resultado = calculaPotencia(base, expoente);
console.log(`O resultado de ${base} elevado a ${expoente} √©: ${resultado}`);



